# command-line-arguments
main.init STEXT nosplit size=1 args=0x0 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	main.init(SB), NOSPLIT|NOFRAME|PKGINIT|ABIInternal, $0-0
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·FzY36IO2mY0y4dZ1+Izd/w==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·FzY36IO2mY0y4dZ1+Izd/w==(SB)
	0x0000 00000 (<autogenerated>:1)	RET
	0x0000 c3                                               .
main.main STEXT size=234 args=0x0 locals=0x60 funcid=0x0 align=0x0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	TEXT	main.main(SB), ABIInternal, $96-0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PCDATA	$0, $-2
	0x0004 00004 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	JLS	219
	0x000a 00010 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PCDATA	$0, $-1
	0x000a 00010 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PUSHQ	BP
	0x000b 00011 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	MOVQ	SP, BP
	0x000e 00014 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	SUBQ	$88, SP
	0x0012 00018 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	FUNCDATA	$0, gclocals·Soq6RzO4SX8YA1O9euewoQ==(SB)
	0x0012 00018 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	FUNCDATA	$1, gclocals·ZDGzQQEMStzjHAG1n7jkwg==(SB)
	0x0012 00018 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	FUNCDATA	$2, main.main.stkobj(SB)
	0x0012 00018 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:12)	XCHGL	AX, AX
	0x0013 00019 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVUPS	X15, main..autotmp_16+72(SP)
	0x0019 00025 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	main.greeting(SB), AX
	0x0020 00032 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	main.greeting+8(SB), BX
	0x0027 00039 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	PCDATA	$1, $1
	0x0027 00039 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	CALL	runtime.convTstring(SB)
	0x002c 00044 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	LEAQ	type:string(SB), CX
	0x0033 00051 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	CX, main..autotmp_16+72(SP)
	0x0038 00056 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	AX, main..autotmp_16+80(SP)
	0x003d 00061 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x0044 00068 (<unknown line number>)	NOP
	0x0044 00068 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x004b 00075 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_16+72(SP), CX
	0x0050 00080 (/usr/local/go/src/fmt/print.go:314)	MOVL	$1, DI
	0x0055 00085 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x0058 00088 (/usr/local/go/src/fmt/print.go:314)	PCDATA	$1, $0
	0x0058 00088 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x005d 00093 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:13)	MOVQ	$3, main.added(SB)
	0x0068 00104 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVUPS	X15, main..autotmp_19+40(SP)
	0x006e 00110 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVUPS	X15, main..autotmp_19+56(SP)
	0x0074 00116 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	LEAQ	type:string(SB), CX
	0x007b 00123 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVQ	CX, main..autotmp_19+40(SP)
	0x0080 00128 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	LEAQ	main..stmp_0(SB), CX
	0x0087 00135 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVQ	CX, main..autotmp_19+48(SP)
	0x008c 00140 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVQ	main.added(SB), AX
	0x0093 00147 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	PCDATA	$1, $2
	0x0093 00147 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	CALL	runtime.convT64(SB)
	0x0098 00152 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	LEAQ	type:int(SB), CX
	0x009f 00159 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVQ	CX, main..autotmp_19+56(SP)
	0x00a4 00164 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:14)	MOVQ	AX, main..autotmp_19+64(SP)
	0x00a9 00169 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x00b0 00176 (<unknown line number>)	NOP
	0x00b0 00176 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x00b7 00183 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_19+40(SP), CX
	0x00bc 00188 (/usr/local/go/src/fmt/print.go:314)	MOVL	$2, DI
	0x00c1 00193 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x00c4 00196 (/usr/local/go/src/fmt/print.go:314)	PCDATA	$1, $0
	0x00c4 00196 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x00c9 00201 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:15)	LEAQ	main.a(SB), AX
	0x00d0 00208 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:15)	CALL	main.set_to_zero(SB)
	0x00d5 00213 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:16)	ADDQ	$88, SP
	0x00d9 00217 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:16)	POPQ	BP
	0x00da 00218 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:16)	RET
	0x00db 00219 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:16)	NOP
	0x00db 00219 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PCDATA	$1, $-1
	0x00db 00219 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PCDATA	$0, $-2
	0x00db 00219 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	NOP
	0x00e0 00224 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	CALL	runtime.morestack_noctxt(SB)
	0x00e5 00229 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	PCDATA	$0, $-1
	0x00e5 00229 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:11)	JMP	0
	0x0000 49 3b 66 10 0f 86 d1 00 00 00 55 48 89 e5 48 83  I;f.......UH..H.
	0x0010 ec 58 90 44 0f 11 7c 24 48 48 8b 05 00 00 00 00  .X.D..|$HH......
	0x0020 48 8b 1d 00 00 00 00 e8 00 00 00 00 48 8d 0d 00  H...........H...
	0x0030 00 00 00 48 89 4c 24 48 48 89 44 24 50 48 8b 1d  ...H.L$HH.D$PH..
	0x0040 00 00 00 00 48 8d 05 00 00 00 00 48 8d 4c 24 48  ....H......H.L$H
	0x0050 bf 01 00 00 00 48 89 fe e8 00 00 00 00 48 c7 05  .....H.......H..
	0x0060 00 00 00 00 03 00 00 00 44 0f 11 7c 24 28 44 0f  ........D..|$(D.
	0x0070 11 7c 24 38 48 8d 0d 00 00 00 00 48 89 4c 24 28  .|$8H......H.L$(
	0x0080 48 8d 0d 00 00 00 00 48 89 4c 24 30 48 8b 05 00  H......H.L$0H...
	0x0090 00 00 00 e8 00 00 00 00 48 8d 0d 00 00 00 00 48  ........H......H
	0x00a0 89 4c 24 38 48 89 44 24 40 48 8b 1d 00 00 00 00  .L$8H.D$@H......
	0x00b0 48 8d 05 00 00 00 00 48 8d 4c 24 28 bf 02 00 00  H......H.L$(....
	0x00c0 00 48 89 fe e8 00 00 00 00 48 8d 05 00 00 00 00  .H.......H......
	0x00d0 e8 00 00 00 00 48 83 c4 58 5d c3 0f 1f 44 00 00  .....H..X]...D..
	0x00e0 e8 00 00 00 00 e9 16 ff ff ff                    ..........
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:*os.File+0
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:int+0
	rel 3+0 t=R_USEIFACE type:*os.File+0
	rel 28+4 t=R_PCREL main.greeting+0
	rel 35+4 t=R_PCREL main.greeting+8
	rel 40+4 t=R_CALL runtime.convTstring+0
	rel 47+4 t=R_PCREL type:string+0
	rel 64+4 t=R_PCREL os.Stdout+0
	rel 71+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 89+4 t=R_CALL fmt.Fprintln+0
	rel 96+4 t=R_PCREL main.added+-4
	rel 119+4 t=R_PCREL type:string+0
	rel 131+4 t=R_PCREL main..stmp_0+0
	rel 143+4 t=R_PCREL main.added+0
	rel 148+4 t=R_CALL runtime.convT64+0
	rel 155+4 t=R_PCREL type:int+0
	rel 172+4 t=R_PCREL os.Stdout+0
	rel 179+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 197+4 t=R_CALL fmt.Fprintln+0
	rel 204+4 t=R_PCREL main.a+0
	rel 209+4 t=R_CALL main.set_to_zero+0
	rel 225+4 t=R_CALL runtime.morestack_noctxt+0
main.hello_world STEXT size=103 args=0x0 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	TEXT	main.hello_world(SB), ABIInternal, $64-0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	CMPQ	SP, 16(R14)
	0x0004 00004 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PCDATA	$0, $-2
	0x0004 00004 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	JLS	94
	0x0006 00006 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PCDATA	$0, $-1
	0x0006 00006 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PUSHQ	BP
	0x0007 00007 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	MOVQ	SP, BP
	0x000a 00010 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	SUBQ	$56, SP
	0x000e 00014 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	FUNCDATA	$0, gclocals·ISb46fRPFoZ9pIfykFK/kQ==(SB)
	0x000e 00014 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	FUNCDATA	$1, gclocals·y8m7lvuFiYH+34CaepokTw==(SB)
	0x000e 00014 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	FUNCDATA	$2, main.hello_world.stkobj(SB)
	0x000e 00014 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVUPS	X15, main..autotmp_8+40(SP)
	0x0014 00020 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	main.greeting(SB), AX
	0x001b 00027 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	main.greeting+8(SB), BX
	0x0022 00034 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	PCDATA	$1, $1
	0x0022 00034 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	CALL	runtime.convTstring(SB)
	0x0027 00039 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	LEAQ	type:string(SB), CX
	0x002e 00046 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	CX, main..autotmp_8+40(SP)
	0x0033 00051 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:19)	MOVQ	AX, main..autotmp_8+48(SP)
	0x0038 00056 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x003f 00063 (<unknown line number>)	NOP
	0x003f 00063 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x0046 00070 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_8+40(SP), CX
	0x004b 00075 (/usr/local/go/src/fmt/print.go:314)	MOVL	$1, DI
	0x0050 00080 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x0053 00083 (/usr/local/go/src/fmt/print.go:314)	PCDATA	$1, $0
	0x0053 00083 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x0058 00088 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:20)	ADDQ	$56, SP
	0x005c 00092 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:20)	POPQ	BP
	0x005d 00093 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:20)	RET
	0x005e 00094 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:20)	NOP
	0x005e 00094 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PCDATA	$1, $-1
	0x005e 00094 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PCDATA	$0, $-2
	0x005e 00094 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	NOP
	0x0060 00096 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	PCDATA	$0, $-1
	0x0065 00101 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:18)	JMP	0
	0x0000 49 3b 66 10 76 58 55 48 89 e5 48 83 ec 38 44 0f  I;f.vXUH..H..8D.
	0x0010 11 7c 24 28 48 8b 05 00 00 00 00 48 8b 1d 00 00  .|$(H......H....
	0x0020 00 00 e8 00 00 00 00 48 8d 0d 00 00 00 00 48 89  .......H......H.
	0x0030 4c 24 28 48 89 44 24 30 48 8b 1d 00 00 00 00 48  L$(H.D$0H......H
	0x0040 8d 05 00 00 00 00 48 8d 4c 24 28 bf 01 00 00 00  ......H.L$(.....
	0x0050 48 89 fe e8 00 00 00 00 48 83 c4 38 5d c3 66 90  H.......H..8].f.
	0x0060 e8 00 00 00 00 eb 99                             .......
	rel 2+0 t=R_USEIFACE type:string+0
	rel 2+0 t=R_USEIFACE type:*os.File+0
	rel 23+4 t=R_PCREL main.greeting+0
	rel 30+4 t=R_PCREL main.greeting+8
	rel 35+4 t=R_CALL runtime.convTstring+0
	rel 42+4 t=R_PCREL type:string+0
	rel 59+4 t=R_PCREL os.Stdout+0
	rel 66+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 84+4 t=R_CALL fmt.Fprintln+0
	rel 97+4 t=R_CALL runtime.morestack_noctxt+0
main.add STEXT nosplit size=4 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	TEXT	main.add(SB), NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	FUNCDATA	$0, gclocals·FzY36IO2mY0y4dZ1+Izd/w==(SB)
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	FUNCDATA	$1, gclocals·FzY36IO2mY0y4dZ1+Izd/w==(SB)
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	FUNCDATA	$5, main.add.arginfo1(SB)
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	FUNCDATA	$6, main.add.argliveinfo(SB)
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:22)	PCDATA	$3, $1
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:23)	ADDQ	BX, AX
	0x0003 00003 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:23)	RET
	0x0000 48 01 d8 c3                                      H...
main.set_to_zero STEXT size=431 args=0x8 locals=0x98 funcid=0x0 align=0x0
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	TEXT	main.set_to_zero(SB), ABIInternal, $152-8
	0x0000 00000 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	LEAQ	-24(SP), R12
	0x0005 00005 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	CMPQ	R12, 16(R14)
	0x0009 00009 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$0, $-2
	0x0009 00009 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	JLS	408
	0x000f 00015 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$0, $-1
	0x000f 00015 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PUSHQ	BP
	0x0010 00016 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	SP, BP
	0x0013 00019 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	SUBQ	$144, SP
	0x001a 00026 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	FUNCDATA	$0, gclocals·cr247GbaOYSIwcehrHtzUg==(SB)
	0x001a 00026 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	FUNCDATA	$1, gclocals·FS3buwAilHzmbS49kwcmRA==(SB)
	0x001a 00026 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	FUNCDATA	$2, main.set_to_zero.stkobj(SB)
	0x001a 00026 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	FUNCDATA	$5, main.set_to_zero.arginfo1(SB)
	0x001a 00026 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	AX, main.a+160(SP)
	0x0022 00034 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	LEAQ	type:*int(SB), AX
	0x0029 00041 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$1, $0
	0x0029 00041 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	CALL	runtime.newobject(SB)
	0x002e 00046 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	AX, main.&a+136(SP)
	0x0036 00054 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	CMPL	runtime.writeBarrier(SB), $0
	0x003d 00061 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$0, $-2
	0x003d 00061 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	JEQ	94
	0x003f 00063 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	AX, BX
	0x0042 00066 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	LEAQ	main.a+160(SP), CX
	0x004a 00074 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	LEAQ	type:*int(SB), AX
	0x0051 00081 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	CALL	runtime.wbMove(SB)
	0x0056 00086 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	main.&a+136(SP), AX
	0x005e 00094 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	main.a+160(SP), CX
	0x0066 00102 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	CX, (AX)
	0x0069 00105 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	PCDATA	$0, $-1
	0x0069 00105 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVUPS	X15, main..autotmp_20+104(SP)
	0x006f 00111 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVUPS	X15, main..autotmp_20+120(SP)
	0x0075 00117 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	LEAQ	type:string(SB), CX
	0x007c 00124 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	CX, main..autotmp_20+104(SP)
	0x0081 00129 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	LEAQ	main..stmp_1(SB), CX
	0x0088 00136 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	CX, main..autotmp_20+112(SP)
	0x008d 00141 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	(AX), CX
	0x0090 00144 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	(CX), AX
	0x0093 00147 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	PCDATA	$1, $1
	0x0093 00147 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	CALL	runtime.convT64(SB)
	0x0098 00152 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	LEAQ	type:int(SB), CX
	0x009f 00159 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	CX, main..autotmp_20+120(SP)
	0x00a4 00164 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:27)	MOVQ	AX, main..autotmp_20+128(SP)
	0x00ac 00172 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x00b3 00179 (<unknown line number>)	NOP
	0x00b3 00179 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x00ba 00186 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_20+104(SP), CX
	0x00bf 00191 (/usr/local/go/src/fmt/print.go:314)	MOVL	$2, DI
	0x00c4 00196 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x00c7 00199 (/usr/local/go/src/fmt/print.go:314)	PCDATA	$1, $2
	0x00c7 00199 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x00cc 00204 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:28)	MOVQ	main.&a+136(SP), CX
	0x00d4 00212 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:28)	MOVQ	(CX), DX
	0x00d7 00215 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:28)	MOVQ	$0, (DX)
	0x00de 00222 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	LEAQ	type:string(SB), DX
	0x00e5 00229 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	MOVQ	DX, main..autotmp_24+72(SP)
	0x00ea 00234 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	LEAQ	main..stmp_2(SB), DX
	0x00f1 00241 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	MOVQ	DX, main..autotmp_24+80(SP)
	0x00f6 00246 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	LEAQ	type:**int(SB), DX
	0x00fd 00253 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	MOVQ	DX, main..autotmp_24+88(SP)
	0x0102 00258 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:29)	MOVQ	CX, main..autotmp_24+96(SP)
	0x0107 00263 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x010e 00270 (<unknown line number>)	NOP
	0x010e 00270 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x0115 00277 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_24+72(SP), CX
	0x011a 00282 (/usr/local/go/src/fmt/print.go:314)	MOVL	$2, DI
	0x011f 00287 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x0122 00290 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x0127 00295 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVUPS	X15, main..autotmp_27+40(SP)
	0x012d 00301 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVUPS	X15, main..autotmp_27+56(SP)
	0x0133 00307 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	LEAQ	type:string(SB), CX
	0x013a 00314 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	CX, main..autotmp_27+40(SP)
	0x013f 00319 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	LEAQ	main..stmp_3(SB), CX
	0x0146 00326 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	CX, main..autotmp_27+48(SP)
	0x014b 00331 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	main.&a+136(SP), CX
	0x0153 00339 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	(CX), CX
	0x0156 00342 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	(CX), AX
	0x0159 00345 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	PCDATA	$1, $3
	0x0159 00345 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	CALL	runtime.convT64(SB)
	0x015e 00350 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	LEAQ	type:int(SB), CX
	0x0165 00357 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	CX, main..autotmp_27+56(SP)
	0x016a 00362 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:30)	MOVQ	AX, main..autotmp_27+64(SP)
	0x016f 00367 (/usr/local/go/src/fmt/print.go:314)	MOVQ	os.Stdout(SB), BX
	0x0176 00374 (<unknown line number>)	NOP
	0x0176 00374 (/usr/local/go/src/fmt/print.go:314)	LEAQ	go:itab.*os.File,io.Writer(SB), AX
	0x017d 00381 (/usr/local/go/src/fmt/print.go:314)	LEAQ	main..autotmp_27+40(SP), CX
	0x0182 00386 (/usr/local/go/src/fmt/print.go:314)	MOVL	$2, DI
	0x0187 00391 (/usr/local/go/src/fmt/print.go:314)	MOVQ	DI, SI
	0x018a 00394 (/usr/local/go/src/fmt/print.go:314)	PCDATA	$1, $4
	0x018a 00394 (/usr/local/go/src/fmt/print.go:314)	CALL	fmt.Fprintln(SB)
	0x018f 00399 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:31)	ADDQ	$144, SP
	0x0196 00406 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:31)	POPQ	BP
	0x0197 00407 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:31)	RET
	0x0198 00408 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:31)	NOP
	0x0198 00408 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$1, $-1
	0x0198 00408 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$0, $-2
	0x0198 00408 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	AX, 8(SP)
	0x019d 00413 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	NOP
	0x01a0 00416 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	CALL	runtime.morestack_noctxt(SB)
	0x01a5 00421 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	PCDATA	$0, $-1
	0x01a5 00421 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	MOVQ	8(SP), AX
	0x01aa 00426 (/home/kris/github/practical-binary-analysis/chapter-1/go/c-1.go:26)	JMP	0
	0x0000 4c 8d 64 24 e8 4d 3b 66 10 0f 86 89 01 00 00 55  L.d$.M;f.......U
	0x0010 48 89 e5 48 81 ec 90 00 00 00 48 89 84 24 a0 00  H..H......H..$..
	0x0020 00 00 48 8d 05 00 00 00 00 e8 00 00 00 00 48 89  ..H...........H.
	0x0030 84 24 88 00 00 00 83 3d 00 00 00 00 00 74 1f 48  .$.....=.....t.H
	0x0040 89 c3 48 8d 8c 24 a0 00 00 00 48 8d 05 00 00 00  ..H..$....H.....
	0x0050 00 e8 00 00 00 00 48 8b 84 24 88 00 00 00 48 8b  ......H..$....H.
	0x0060 8c 24 a0 00 00 00 48 89 08 44 0f 11 7c 24 68 44  .$....H..D..|$hD
	0x0070 0f 11 7c 24 78 48 8d 0d 00 00 00 00 48 89 4c 24  ..|$xH......H.L$
	0x0080 68 48 8d 0d 00 00 00 00 48 89 4c 24 70 48 8b 08  hH......H.L$pH..
	0x0090 48 8b 01 e8 00 00 00 00 48 8d 0d 00 00 00 00 48  H.......H......H
	0x00a0 89 4c 24 78 48 89 84 24 80 00 00 00 48 8b 1d 00  .L$xH..$....H...
	0x00b0 00 00 00 48 8d 05 00 00 00 00 48 8d 4c 24 68 bf  ...H......H.L$h.
	0x00c0 02 00 00 00 48 89 fe e8 00 00 00 00 48 8b 8c 24  ....H.......H..$
	0x00d0 88 00 00 00 48 8b 11 48 c7 02 00 00 00 00 48 8d  ....H..H......H.
	0x00e0 15 00 00 00 00 48 89 54 24 48 48 8d 15 00 00 00  .....H.T$HH.....
	0x00f0 00 48 89 54 24 50 48 8d 15 00 00 00 00 48 89 54  .H.T$PH......H.T
	0x0100 24 58 48 89 4c 24 60 48 8b 1d 00 00 00 00 48 8d  $XH.L$`H......H.
	0x0110 05 00 00 00 00 48 8d 4c 24 48 bf 02 00 00 00 48  .....H.L$H.....H
	0x0120 89 fe e8 00 00 00 00 44 0f 11 7c 24 28 44 0f 11  .......D..|$(D..
	0x0130 7c 24 38 48 8d 0d 00 00 00 00 48 89 4c 24 28 48  |$8H......H.L$(H
	0x0140 8d 0d 00 00 00 00 48 89 4c 24 30 48 8b 8c 24 88  ......H.L$0H..$.
	0x0150 00 00 00 48 8b 09 48 8b 01 e8 00 00 00 00 48 8d  ...H..H.......H.
	0x0160 0d 00 00 00 00 48 89 4c 24 38 48 89 44 24 40 48  .....H.L$8H.D$@H
	0x0170 8b 1d 00 00 00 00 48 8d 05 00 00 00 00 48 8d 4c  ......H......H.L
	0x0180 24 28 bf 02 00 00 00 48 89 fe e8 00 00 00 00 48  $(.....H.......H
	0x0190 81 c4 90 00 00 00 5d c3 48 89 44 24 08 0f 1f 00  ......].H.D$....
	0x01a0 e8 00 00 00 00 48 8b 44 24 08 e9 51 fe ff ff     .....H.D$..Q...
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:int+0
	rel 3+0 t=R_USEIFACE type:*os.File+0
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:**int+0
	rel 3+0 t=R_USEIFACE type:*os.File+0
	rel 3+0 t=R_USEIFACE type:string+0
	rel 3+0 t=R_USEIFACE type:int+0
	rel 3+0 t=R_USEIFACE type:*os.File+0
	rel 37+4 t=R_PCREL type:*int+0
	rel 42+4 t=R_CALL runtime.newobject+0
	rel 56+4 t=R_PCREL runtime.writeBarrier+-1
	rel 77+4 t=R_PCREL type:*int+0
	rel 82+4 t=R_CALL runtime.wbMove+0
	rel 120+4 t=R_PCREL type:string+0
	rel 132+4 t=R_PCREL main..stmp_1+0
	rel 148+4 t=R_CALL runtime.convT64+0
	rel 155+4 t=R_PCREL type:int+0
	rel 175+4 t=R_PCREL os.Stdout+0
	rel 182+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 200+4 t=R_CALL fmt.Fprintln+0
	rel 225+4 t=R_PCREL type:string+0
	rel 237+4 t=R_PCREL main..stmp_2+0
	rel 249+4 t=R_PCREL type:**int+0
	rel 266+4 t=R_PCREL os.Stdout+0
	rel 273+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 291+4 t=R_CALL fmt.Fprintln+0
	rel 310+4 t=R_PCREL type:string+0
	rel 322+4 t=R_PCREL main..stmp_3+0
	rel 346+4 t=R_CALL runtime.convT64+0
	rel 353+4 t=R_PCREL type:int+0
	rel 370+4 t=R_PCREL os.Stdout+0
	rel 377+4 t=R_PCREL go:itab.*os.File,io.Writer+0
	rel 395+4 t=R_CALL fmt.Fprintln+0
	rel 417+4 t=R_CALL runtime.morestack_noctxt+0
type:.eq.sync/atomic.Pointer[os.dirInfo] STEXT dupok nosplit size=10 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.sync/atomic.Pointer[os.dirInfo](SB), DUPOK|NOSPLIT|NOFRAME|ABIInternal, $0-16
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·rJbr+btbFJy3NLIRCgNSZQ==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·ISb46fRPFoZ9pIfykFK/kQ==(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.sync/atomic.Pointer[os.dirInfo].arginfo1(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.sync/atomic.Pointer[os.dirInfo].argliveinfo(SB)
	0x0000 00000 (<autogenerated>:1)	PCDATA	$3, $1
	0x0000 00000 (<autogenerated>:1)	MOVQ	(AX), CX
	0x0003 00003 (<autogenerated>:1)	CMPQ	(BX), CX
	0x0006 00006 (<autogenerated>:1)	SETEQ	AL
	0x0009 00009 (<autogenerated>:1)	RET
	0x0000 48 8b 08 48 39 0b 0f 94 c0 c3                    H..H9.....
type:.eq.[2]interface {} STEXT dupok size=159 args=0x10 locals=0x28 funcid=0x0 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	type:.eq.[2]interface {}(SB), DUPOK|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	129
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	PUSHQ	BP
	0x0007 00007 (<autogenerated>:1)	MOVQ	SP, BP
	0x000a 00010 (<autogenerated>:1)	SUBQ	$32, SP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·rJbr+btbFJy3NLIRCgNSZQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·ISb46fRPFoZ9pIfykFK/kQ==(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$5, type:.eq.[2]interface {}.arginfo1(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$6, type:.eq.[2]interface {}.argliveinfo(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$3, $1
	0x000e 00014 (<autogenerated>:1)	MOVQ	AX, main.p+48(SP)
	0x0013 00019 (<autogenerated>:1)	MOVQ	BX, main.q+56(SP)
	0x0018 00024 (<autogenerated>:1)	PCDATA	$3, $-1
	0x0018 00024 (<autogenerated>:1)	XORL	CX, CX
	0x001a 00026 (<autogenerated>:1)	JMP	46
	0x001c 00028 (<autogenerated>:1)	MOVQ	main..autotmp_6+24(SP), CX
	0x0021 00033 (<autogenerated>:1)	INCQ	CX
	0x0024 00036 (<autogenerated>:1)	MOVQ	main.q+56(SP), BX
	0x0029 00041 (<autogenerated>:1)	MOVQ	main.p+48(SP), AX
	0x002e 00046 (<autogenerated>:1)	CMPQ	CX, $2
	0x0032 00050 (<autogenerated>:1)	JGE	120
	0x0034 00052 (<autogenerated>:1)	MOVQ	CX, DX
	0x0037 00055 (<autogenerated>:1)	SHLQ	$4, CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	(AX)(CX*1), SI
	0x003f 00063 (<autogenerated>:1)	MOVQ	(BX)(CX*1), DI
	0x0043 00067 (<autogenerated>:1)	MOVQ	8(CX)(AX*1), R8
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(CX)(BX*1), CX
	0x004d 00077 (<autogenerated>:1)	CMPQ	DI, SI
	0x0050 00080 (<autogenerated>:1)	JNE	116
	0x0052 00082 (<autogenerated>:1)	MOVQ	DX, main..autotmp_6+24(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	SI, AX
	0x005a 00090 (<autogenerated>:1)	MOVQ	R8, BX
	0x005d 00093 (<autogenerated>:1)	PCDATA	$1, $0
	0x005d 00093 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CALL	runtime.efaceeq(SB)
	0x0065 00101 (<autogenerated>:1)	TESTB	AL, AL
	0x0067 00103 (<autogenerated>:1)	JNE	28
	0x0069 00105 (<autogenerated>:1)	MOVQ	main..autotmp_6+24(SP), CX
	0x006e 00110 (<autogenerated>:1)	CMPQ	CX, $2
	0x0072 00114 (<autogenerated>:1)	JMP	120
	0x0074 00116 (<autogenerated>:1)	CMPQ	DX, $2
	0x0078 00120 (<autogenerated>:1)	SETGE	AL
	0x007b 00123 (<autogenerated>:1)	ADDQ	$32, SP
	0x007f 00127 (<autogenerated>:1)	POPQ	BP
	0x0080 00128 (<autogenerated>:1)	RET
	0x0081 00129 (<autogenerated>:1)	NOP
	0x0081 00129 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0081 00129 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0081 00129 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0086 00134 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x008b 00139 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0090 00144 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0090 00144 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x0095 00149 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x009a 00154 (<autogenerated>:1)	JMP	0
	0x0000 49 3b 66 10 76 7b 55 48 89 e5 48 83 ec 20 48 89  I;f.v{UH..H.. H.
	0x0010 44 24 30 48 89 5c 24 38 31 c9 eb 12 48 8b 4c 24  D$0H.\$81...H.L$
	0x0020 18 48 ff c1 48 8b 5c 24 38 48 8b 44 24 30 48 83  .H..H.\$8H.D$0H.
	0x0030 f9 02 7d 44 48 89 ca 48 c1 e1 04 48 8b 34 08 48  ..}DH..H...H.4.H
	0x0040 8b 3c 0b 4c 8b 44 01 08 48 8b 4c 19 08 48 39 f7  .<.L.D..H.L..H9.
	0x0050 75 22 48 89 54 24 18 48 89 f0 4c 89 c3 0f 1f 00  u"H.T$.H..L.....
	0x0060 e8 00 00 00 00 84 c0 75 b3 48 8b 4c 24 18 48 83  .......u.H.L$.H.
	0x0070 f9 02 eb 04 48 83 fa 02 0f 9d c0 48 83 c4 20 5d  ....H......H.. ]
	0x0080 c3 48 89 44 24 08 48 89 5c 24 10 e8 00 00 00 00  .H.D$.H.\$......
	0x0090 48 8b 44 24 08 48 8b 5c 24 10 e9 61 ff ff ff     H.D$.H.\$..a...
	rel 97+4 t=R_CALL runtime.efaceeq+0
	rel 140+4 t=R_CALL runtime.morestack_noctxt+0
go:cuinfo.producer.main SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
go:cuinfo.packagename.main SDWARFCUINFO dupok size=0
	0x0000 6d 61 69 6e                                      main
go:info.fmt.Println$abstract SDWARFABSFCN dupok size=44
	0x0000 05 66 6d 74 2e 50 72 69 6e 74 6c 6e 00 01 b9 02  .fmt.Println....
	0x0010 01 22 61 00 00 00 00 00 00 22 6e 00 01 00 00 00  ."a......"n.....
	0x0020 00 22 65 72 72 00 01 00 00 00 00 00              ."err.......
	rel 0+0 t=R_USETYPE type:[]interface {}+0
	rel 0+0 t=R_USETYPE type:error+0
	rel 0+0 t=R_USETYPE type:int+0
	rel 21+4 t=R_DWARFSECREF go:info.[]interface {}+0
	rel 29+4 t=R_DWARFSECREF go:info.int+0
	rel 39+4 t=R_DWARFSECREF go:info.error+0
go:itab.*os.File,io.Writer SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 c1 d7 bc cc 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR type:io.Writer+0
	rel 8+8 t=R_ADDR type:*os.File+0
	rel 24+8 t=RelocType(-32767) os.(*File).Write+0
sync/atomic..dict.Pointer[os.dirInfo] SRODATA dupok size=128
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:unsafe.Pointer+0
	rel 0+0 t=R_USEIFACE type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 0+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:unsafe.Pointer+0
	rel 0+0 t=R_USEIFACE type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 0+0 t=R_USEIFACE type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 0+0 t=R_USEIFACE type:unsafe.Pointer+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 0+0 t=R_USEIFACE type:unsafe.Pointer+0
	rel 0+0 t=R_USEIFACE type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 0+0 t=R_USEIFACE type:unsafe.Pointer+0
	rel 0+0 t=R_USEIFACE type:*os.dirInfo+0
	rel 8+8 t=R_ADDR type:*os.dirInfo+0
	rel 16+8 t=R_ADDR type:*os.dirInfo+0
	rel 24+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 32+8 t=R_ADDR type:*os.dirInfo+0
	rel 40+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 48+8 t=R_ADDR type:*os.dirInfo+0
	rel 56+8 t=R_ADDR type:*os.dirInfo+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
	rel 72+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 80+8 t=R_ADDR type:*os.dirInfo+0
go:info.main.hello_world$abstract SDWARFABSFCN dupok size=22
	0x0000 05 6d 61 69 6e 2e 68 65 6c 6c 6f 5f 77 6f 72 6c  .main.hello_worl
	0x0010 64 00 01 12 01 00                                d.....
go:info.main.add$abstract SDWARFABSFCN dupok size=30
	0x0000 05 6d 61 69 6e 2e 61 64 64 00 01 16 01 22 61 00  .main.add...."a.
	0x0010 00 00 00 00 00 22 62 00 00 00 00 00 00 00        ....."b.......
	rel 17+4 t=R_DWARFSECREF go:info.int+0
	rel 25+4 t=R_DWARFSECREF go:info.int+0
go:string."Hello, World!" SRODATA dupok size=13
	0x0000 48 65 6c 6c 6f 2c 20 57 6f 72 6c 64 21           Hello, World!
main..inittask SNOPTRDATA size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+0 t=R_INITORDER fmt..inittask+0
runtime.memequal64·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal64+0
runtime.gcbits.0100000000000000 SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.**int- SRODATA dupok size=7
	0x0000 00 05 2a 2a 69 6e 74                             ..**int
type:**int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 54 6b 67 59 08 08 08 36 00 00 00 00 00 00 00 00  TkgY...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.**int-+0
	rel 48+8 t=R_ADDR type:*int+0
type:.namedata.*atomic.Pointer[os.dirInfo]. SRODATA dupok size=29
	0x0000 01 1b 2a 61 74 6f 6d 69 63 2e 50 6f 69 6e 74 65  ..*atomic.Pointe
	0x0010 72 5b 6f 73 2e 64 69 72 49 6e 66 6f 5d           r[os.dirInfo]
type:.eqfunc.sync/atomic.Pointer[os.dirInfo] SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.sync/atomic.Pointer[os.dirInfo]+0
runtime.memequal0·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.memequal0+0
type:.namedata.*[0]*os.dirInfo- SRODATA dupok size=17
	0x0000 00 0f 2a 5b 30 5d 2a 6f 73 2e 64 69 72 49 6e 66  ..*[0]*os.dirInf
	0x0010 6f                                               o
type:*[0]*os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a6 08 19 82 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]*os.dirInfo-+0
	rel 48+8 t=R_ADDR type:[0]*os.dirInfo+0
runtime.gcbits. SRODATA dupok size=0
type:.namedata.*[]*os.dirInfo- SRODATA dupok size=16
	0x0000 00 0e 2a 5b 5d 2a 6f 73 2e 64 69 72 49 6e 66 6f  ..*[]*os.dirInfo
type:*[]*os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9d 8a 6c 8a 08 08 08 36 00 00 00 00 00 00 00 00  ..l....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]*os.dirInfo-+0
	rel 48+8 t=R_ADDR type:[]*os.dirInfo+0
type:[]*os.dirInfo SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 55 53 05 41 02 08 08 17 00 00 00 00 00 00 00 00  US.A............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[]*os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*[]*os.dirInfo+0
	rel 48+8 t=R_ADDR type:*os.dirInfo+0
type:[0]*os.dirInfo SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 64 82 13 1a 0a 08 08 11 00 00 00 00 00 00 00 00  d...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal0·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[0]*os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*[0]*os.dirInfo+0
	rel 48+8 t=R_ADDR type:*os.dirInfo+0
	rel 56+8 t=R_ADDR type:[]*os.dirInfo+0
type:.importpath.sync/atomic. SRODATA dupok size=13
	0x0000 00 0b 73 79 6e 63 2f 61 74 6f 6d 69 63           ..sync/atomic
type:.namedata._- SRODATA dupok size=3
	0x0000 00 01 5f                                         .._
type:.namedata.v- SRODATA dupok size=3
	0x0000 00 01 76                                         ..v
type:sync/atomic.Pointer[os.dirInfo] SRODATA dupok size=168
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 96 c3 42 f6 07 08 08 19 00 00 00 00 00 00 00 00  ..B.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  ........X.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.sync/atomic.Pointer[os.dirInfo]+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*atomic.Pointer[os.dirInfo].+0
	rel 44+4 t=R_ADDROFF type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 48+8 t=R_ADDR type:.importpath.sync/atomic.+0
	rel 56+8 t=R_ADDR type:sync/atomic.Pointer[os.dirInfo]+96
	rel 80+4 t=R_ADDROFF type:.importpath.sync/atomic.+0
	rel 96+8 t=R_ADDR type:.namedata._-+0
	rel 104+8 t=R_ADDR type:[0]*os.dirInfo+0
	rel 120+8 t=R_ADDR type:.namedata._-+0
	rel 128+8 t=R_ADDR type:sync/atomic.noCopy+0
	rel 144+8 t=R_ADDR type:.namedata.v-+0
	rel 152+8 t=R_ADDR type:unsafe.Pointer+0
type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool- SRODATA dupok size=67
	0x0000 00 41 2a 66 75 6e 63 28 2a 61 74 6f 6d 69 63 2e  .A*func(*atomic.
	0x0010 50 6f 69 6e 74 65 72 5b 6f 73 2e 64 69 72 49 6e  Pointer[os.dirIn
	0x0020 66 6f 5d 2c 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  fo], *os.dirInfo
	0x0030 2c 20 2a 6f 73 2e 64 69 72 49 6e 66 6f 29 20 62  , *os.dirInfo) b
	0x0040 6f 6f 6c                                         ool
type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fe 18 d0 29 08 08 08 36 00 00 00 00 00 00 00 00  ...)...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool-+0
	rel 48+8 t=R_ADDR type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool+0
type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b9 bc ac c6 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 03 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool-+0
	rel 44+4 t=RelocType(-32763) type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo, *os.dirInfo) bool+0
	rel 56+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
	rel 72+8 t=R_ADDR type:*os.dirInfo+0
	rel 80+8 t=R_ADDR type:bool+0
type:.namedata.*func(*atomic.Pointer[os.dirInfo]) *os.dirInfo- SRODATA dupok size=48
	0x0000 00 2e 2a 66 75 6e 63 28 2a 61 74 6f 6d 69 63 2e  ..*func(*atomic.
	0x0010 50 6f 69 6e 74 65 72 5b 6f 73 2e 64 69 72 49 6e  Pointer[os.dirIn
	0x0020 66 6f 5d 29 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  fo]) *os.dirInfo
type:*func(*sync/atomic.Pointer[os.dirInfo]) *os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 59 bb 31 13 08 08 08 36 00 00 00 00 00 00 00 00  Y.1....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo]) *os.dirInfo-+0
	rel 48+8 t=R_ADDR type:func(*sync/atomic.Pointer[os.dirInfo]) *os.dirInfo+0
type:func(*sync/atomic.Pointer[os.dirInfo]) *os.dirInfo SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d5 d6 af 2f 02 08 08 33 00 00 00 00 00 00 00 00  .../...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo]) *os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*func(*sync/atomic.Pointer[os.dirInfo]) *os.dirInfo+0
	rel 56+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo)- SRODATA dupok size=49
	0x0000 00 2f 2a 66 75 6e 63 28 2a 61 74 6f 6d 69 63 2e  ./*func(*atomic.
	0x0010 50 6f 69 6e 74 65 72 5b 6f 73 2e 64 69 72 49 6e  Pointer[os.dirIn
	0x0020 66 6f 5d 2c 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  fo], *os.dirInfo
	0x0030 29                                               )
type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 73 91 45 a4 08 08 08 36 00 00 00 00 00 00 00 00  s.E....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo)-+0
	rel 48+8 t=R_ADDR type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo)+0
type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a7 d9 da 27 02 08 08 33 00 00 00 00 00 00 00 00  ...'...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo)-+0
	rel 44+4 t=RelocType(-32763) type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo)+0
	rel 56+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo- SRODATA dupok size=61
	0x0000 00 3b 2a 66 75 6e 63 28 2a 61 74 6f 6d 69 63 2e  .;*func(*atomic.
	0x0010 50 6f 69 6e 74 65 72 5b 6f 73 2e 64 69 72 49 6e  Pointer[os.dirIn
	0x0020 66 6f 5d 2c 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  fo], *os.dirInfo
	0x0030 29 20 2a 6f 73 2e 64 69 72 49 6e 66 6f           ) *os.dirInfo
type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 46 0b cc 77 08 08 08 36 00 00 00 00 00 00 00 00  F..w...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo-+0
	rel 48+8 t=R_ADDR type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo+0
type:func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 3a 47 9e 50 02 08 08 33 00 00 00 00 00 00 00 00  :G.P...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*func(*sync/atomic.Pointer[os.dirInfo], *os.dirInfo) *os.dirInfo+0
	rel 56+8 t=R_ADDR type:*sync/atomic.Pointer[os.dirInfo]+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
	rel 72+8 t=R_ADDR type:*os.dirInfo+0
type:.namedata.CompareAndSwap. SRODATA dupok size=16
	0x0000 01 0e 43 6f 6d 70 61 72 65 41 6e 64 53 77 61 70  ..CompareAndSwap
type:.namedata.*func(*os.dirInfo, *os.dirInfo) bool- SRODATA dupok size=38
	0x0000 00 24 2a 66 75 6e 63 28 2a 6f 73 2e 64 69 72 49  .$*func(*os.dirI
	0x0010 6e 66 6f 2c 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  nfo, *os.dirInfo
	0x0020 29 20 62 6f 6f 6c                                ) bool
type:*func(*os.dirInfo, *os.dirInfo) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5e 6b 53 61 08 08 08 36 00 00 00 00 00 00 00 00  ^kSa...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo, *os.dirInfo) bool-+0
	rel 48+8 t=R_ADDR type:func(*os.dirInfo, *os.dirInfo) bool+0
type:func(*os.dirInfo, *os.dirInfo) bool SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 48 9c 04 10 02 08 08 33 00 00 00 00 00 00 00 00  H......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo, *os.dirInfo) bool-+0
	rel 44+4 t=RelocType(-32763) type:*func(*os.dirInfo, *os.dirInfo) bool+0
	rel 56+8 t=R_ADDR type:*os.dirInfo+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
	rel 72+8 t=R_ADDR type:bool+0
type:.namedata.Load. SRODATA dupok size=6
	0x0000 01 04 4c 6f 61 64                                ..Load
type:.namedata.*func() *os.dirInfo- SRODATA dupok size=21
	0x0000 00 13 2a 66 75 6e 63 28 29 20 2a 6f 73 2e 64 69  ..*func() *os.di
	0x0010 72 49 6e 66 6f                                   rInfo
type:*func() *os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9f 33 b3 3d 08 08 08 36 00 00 00 00 00 00 00 00  .3.=...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func() *os.dirInfo-+0
	rel 48+8 t=R_ADDR type:func() *os.dirInfo+0
type:func() *os.dirInfo SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e2 f6 62 43 02 08 08 33 00 00 00 00 00 00 00 00  ..bC...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func() *os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*func() *os.dirInfo+0
	rel 56+8 t=R_ADDR type:*os.dirInfo+0
type:.namedata.Store. SRODATA dupok size=7
	0x0000 01 05 53 74 6f 72 65                             ..Store
type:.namedata.*func(*os.dirInfo)- SRODATA dupok size=20
	0x0000 00 12 2a 66 75 6e 63 28 2a 6f 73 2e 64 69 72 49  ..*func(*os.dirI
	0x0010 6e 66 6f 29                                      nfo)
type:*func(*os.dirInfo) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bc 37 80 49 08 08 08 36 00 00 00 00 00 00 00 00  .7.I...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo)-+0
	rel 48+8 t=R_ADDR type:func(*os.dirInfo)+0
type:func(*os.dirInfo) SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 0f ea 90 93 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo)-+0
	rel 44+4 t=RelocType(-32763) type:*func(*os.dirInfo)+0
	rel 56+8 t=R_ADDR type:*os.dirInfo+0
type:.namedata.Swap. SRODATA dupok size=6
	0x0000 01 04 53 77 61 70                                ..Swap
type:.namedata.*func(*os.dirInfo) *os.dirInfo- SRODATA dupok size=32
	0x0000 00 1e 2a 66 75 6e 63 28 2a 6f 73 2e 64 69 72 49  ..*func(*os.dirI
	0x0010 6e 66 6f 29 20 2a 6f 73 2e 64 69 72 49 6e 66 6f  nfo) *os.dirInfo
type:*func(*os.dirInfo) *os.dirInfo SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ab 76 75 e5 08 08 08 36 00 00 00 00 00 00 00 00  .vu....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo) *os.dirInfo-+0
	rel 48+8 t=R_ADDR type:func(*os.dirInfo) *os.dirInfo+0
type:func(*os.dirInfo) *os.dirInfo SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 63 31 bc d9 02 08 08 33 00 00 00 00 00 00 00 00  c1.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*func(*os.dirInfo) *os.dirInfo-+0
	rel 44+4 t=RelocType(-32763) type:*func(*os.dirInfo) *os.dirInfo+0
	rel 56+8 t=R_ADDR type:*os.dirInfo+0
	rel 64+8 t=R_ADDR type:*os.dirInfo+0
type:*sync/atomic.Pointer[os.dirInfo] SRODATA dupok size=136
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 53 db c0 f4 09 08 08 36 00 00 00 00 00 00 00 00  S......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 04 00 04 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*atomic.Pointer[os.dirInfo].+0
	rel 48+8 t=R_ADDR type:sync/atomic.Pointer[os.dirInfo]+0
	rel 56+4 t=R_ADDROFF type:.importpath.sync/atomic.+0
	rel 72+4 t=R_ADDROFF type:.namedata.CompareAndSwap.+0
	rel 76+4 t=R_METHODOFF type:func(*os.dirInfo, *os.dirInfo) bool+0
	rel 80+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).CompareAndSwap+0
	rel 84+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).CompareAndSwap+0
	rel 88+4 t=R_ADDROFF type:.namedata.Load.+0
	rel 92+4 t=R_METHODOFF type:func() *os.dirInfo+0
	rel 96+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Load+0
	rel 100+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Load+0
	rel 104+4 t=R_ADDROFF type:.namedata.Store.+0
	rel 108+4 t=R_METHODOFF type:func(*os.dirInfo)+0
	rel 112+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Store+0
	rel 116+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Store+0
	rel 120+4 t=R_ADDROFF type:.namedata.Swap.+0
	rel 124+4 t=R_METHODOFF type:func(*os.dirInfo) *os.dirInfo+0
	rel 128+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Swap+0
	rel 132+4 t=R_METHODOFF sync/atomic.(*Pointer[os.dirInfo]).Swap+0
main.added SNOPTRBSS size=8
 SDWARFVAR size=27
	0x0000 0a 6d 61 69 6e 2e 61 64 64 65 64 00 09 03 00 00  .main.added.....
	0x0010 00 00 00 00 00 00 00 00 00 00 01                 ...........
	rel 14+8 t=R_ADDR main.added+0
	rel 22+4 t=R_DWARFSECREF go:info.int+0
main.a SNOPTRDATA size=8
	0x0000 05 00 00 00 00 00 00 00                          ........
 SDWARFVAR size=23
	0x0000 0a 6d 61 69 6e 2e 61 00 09 03 00 00 00 00 00 00  .main.a.........
	0x0010 00 00 00 00 00 00 01                             .......
	rel 10+8 t=R_ADDR main.a+0
	rel 18+4 t=R_DWARFSECREF go:info.int+0
main.greeting SDATA size=16
	0x0000 00 00 00 00 00 00 00 00 0d 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR go:string."Hello, World!"+0
 SDWARFVAR size=30
	0x0000 0a 6d 61 69 6e 2e 67 72 65 65 74 69 6e 67 00 09  .main.greeting..
	0x0010 03 00 00 00 00 00 00 00 00 00 00 00 00 01        ..............
	rel 17+8 t=R_ADDR main.greeting+0
	rel 25+4 t=R_DWARFSECREF go:info.string+0
go:string."The sum of 1 and 2 is:" SRODATA dupok size=22
	0x0000 54 68 65 20 73 75 6d 20 6f 66 20 31 20 61 6e 64  The sum of 1 and
	0x0010 20 32 20 69 73 3a                                 2 is:
main..stmp_0 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 16 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR go:string."The sum of 1 and 2 is:"+0
go:string."The value of a before setting to zero:" SRODATA dupok size=38
	0x0000 54 68 65 20 76 61 6c 75 65 20 6f 66 20 61 20 62  The value of a b
	0x0010 65 66 6f 72 65 20 73 65 74 74 69 6e 67 20 74 6f  efore setting to
	0x0020 20 7a 65 72 6f 3a                                 zero:
go:string."Address of a: " SRODATA dupok size=14
	0x0000 41 64 64 72 65 73 73 20 6f 66 20 61 3a 20        Address of a: 
go:string."Value of a is now set to: " SRODATA dupok size=26
	0x0000 56 61 6c 75 65 20 6f 66 20 61 20 69 73 20 6e 6f  Value of a is no
	0x0010 77 20 73 65 74 20 74 6f 3a 20                    w set to: 
main..stmp_1 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 26 00 00 00 00 00 00 00  ........&.......
	rel 0+8 t=R_ADDR go:string."The value of a before setting to zero:"+0
main..stmp_2 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 0e 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR go:string."Address of a: "+0
main..stmp_3 SRODATA static size=16
	0x0000 00 00 00 00 00 00 00 00 1a 00 00 00 00 00 00 00  ................
	rel 0+8 t=R_ADDR go:string."Value of a is now set to: "+0
runtime.nilinterequal·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR runtime.nilinterequal+0
type:.namedata.*[1]interface {}- SRODATA dupok size=18
	0x0000 00 10 2a 5b 31 5d 69 6e 74 65 72 66 61 63 65 20  ..*[1]interface 
	0x0010 7b 7d                                            {}
type:*[1]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 73 3b a6 1c 08 08 08 36 00 00 00 00 00 00 00 00  s;.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]interface {}-+0
	rel 48+8 t=R_ADDR type:[1]interface {}+0
runtime.gcbits.0200000000000000 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:[1]interface {} SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 ea 37 5e 5e 02 08 08 11 00 00 00 00 00 00 00 00  .7^^............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.nilinterequal·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0200000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[1]interface {}-+0
	rel 44+4 t=RelocType(-32763) type:*[1]interface {}+0
	rel 48+8 t=R_ADDR type:interface {}+0
	rel 56+8 t=R_ADDR type:[]interface {}+0
type:.eqfunc.[2]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=R_ADDR type:.eq.[2]interface {}+0
type:.namedata.*[2]interface {}- SRODATA dupok size=18
	0x0000 00 10 2a 5b 32 5d 69 6e 74 65 72 66 61 63 65 20  ..*[2]interface 
	0x0010 7b 7d                                            {}
type:*[2]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2a 46 a7 a3 08 08 08 36 00 00 00 00 00 00 00 00  *F.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR runtime.memequal64·f+0
	rel 32+8 t=R_ADDR runtime.gcbits.0100000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]interface {}-+0
	rel 48+8 t=R_ADDR type:[2]interface {}+0
runtime.gcbits.0a00000000000000 SRODATA dupok size=8
	0x0000 0a 00 00 00 00 00 00 00                          ........
type:[2]interface {} SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00   ....... .......
	0x0010 7a 04 98 81 02 08 08 11 00 00 00 00 00 00 00 00  z...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=R_ADDR type:.eqfunc.[2]interface {}+0
	rel 32+8 t=R_ADDR runtime.gcbits.0a00000000000000+0
	rel 40+4 t=R_ADDROFF type:.namedata.*[2]interface {}-+0
	rel 44+4 t=RelocType(-32763) type:*[2]interface {}+0
	rel 48+8 t=R_ADDR type:interface {}+0
	rel 56+8 t=R_ADDR type:[]interface {}+0
gclocals·FzY36IO2mY0y4dZ1+Izd/w== SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·Soq6RzO4SX8YA1O9euewoQ== SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
gclocals·ZDGzQQEMStzjHAG1n7jkwg== SRODATA dupok size=11
	0x0000 03 00 00 00 06 00 00 00 00 20 0a                 ......... .
main.main.stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 d0 ff ff ff 20 00 00 00  ............ ...
	0x0010 20 00 00 00 00 00 00 00 f0 ff ff ff 10 00 00 00   ...............
	0x0020 10 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0a00000000000000+0
	rel 36+4 t=R_ADDROFF runtime.gcbits.0200000000000000+0
gclocals·ISb46fRPFoZ9pIfykFK/kQ== SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·y8m7lvuFiYH+34CaepokTw== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 02                    ..........
main.hello_world.stkobj SRODATA static size=24
	0x0000 01 00 00 00 00 00 00 00 f0 ff ff ff 10 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00                          ........
	rel 20+4 t=R_ADDROFF runtime.gcbits.0200000000000000+0
main.add.arginfo1 SRODATA static dupok size=5
	0x0000 00 08 08 08 ff                                   .....
main.add.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals·cr247GbaOYSIwcehrHtzUg== SRODATA dupok size=13
	0x0000 05 00 00 00 01 00 00 00 01 00 00 00 00           .............
gclocals·FS3buwAilHzmbS49kwcmRA== SRODATA dupok size=18
	0x0000 05 00 00 00 0d 00 00 00 00 00 00 1a 00 10 0a 00  ................
	0x0010 00 00                                            ..
main.set_to_zero.stkobj SRODATA static size=56
	0x0000 03 00 00 00 00 00 00 00 98 ff ff ff 20 00 00 00  ............ ...
	0x0010 20 00 00 00 00 00 00 00 b8 ff ff ff 20 00 00 00   ........... ...
	0x0020 20 00 00 00 00 00 00 00 d8 ff ff ff 20 00 00 00   ........... ...
	0x0030 20 00 00 00 00 00 00 00                           .......
	rel 20+4 t=R_ADDROFF runtime.gcbits.0a00000000000000+0
	rel 36+4 t=R_ADDROFF runtime.gcbits.0a00000000000000+0
	rel 52+4 t=R_ADDROFF runtime.gcbits.0a00000000000000+0
main.set_to_zero.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
gclocals·rJbr+btbFJy3NLIRCgNSZQ== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
type:.eq.sync/atomic.Pointer[os.dirInfo].arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.sync/atomic.Pointer[os.dirInfo].argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
type:.eq.[2]interface {}.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
type:.eq.[2]interface {}.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
